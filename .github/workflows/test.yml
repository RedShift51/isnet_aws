name: Test ISNet Model

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        pip install -e .
    
    - name: Download test model
      run: |
        mkdir -p tests/test_data/model
        # This is a placeholder - in a real project you would download a small test model
        # from a secure location or create a dummy one for testing
        python -c "import numpy as np; import onnx; from onnx import helper, TensorProto; 
        # Create a dummy ONNX model for testing
        X = helper.make_tensor_value_info('input', TensorProto.FLOAT, [1, 3, 512, 512])
        Y = helper.make_tensor_value_info('output', TensorProto.FLOAT, [1, 1, 512, 512])
        node = helper.make_node('Identity', ['input'], ['output'])
        graph = helper.make_graph([node], 'test-model', [X], [Y])
        model = helper.make_model(graph)
        onnx.save(model, 'tests/test_data/model/test_model.onnx')"
    
    - name: Run unit tests
      env:
        TEST_MODEL_PATH: 'tests/test_data/model/test_model.onnx'
      run: |
        pytest tests/ -v
    
    - name: Run linting
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Run type checking
      run: |
        mypy src/