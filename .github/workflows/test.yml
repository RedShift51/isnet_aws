name: Test ISNet Model

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        # Make sure to install onnxruntime explicitly
        pip install onnxruntime>=1.11.0
    
    - name: Create dummy ONNX model for tests
      run: |
        mkdir -p tests/test_data/model
        python -c "
        import os
        import numpy as np
        try:
            import onnx
            from onnx import helper, TensorProto
            # Create a dummy ONNX model for testing
            X = helper.make_tensor_value_info('input', TensorProto.FLOAT, [1, 3, 1024, 1024])
            Y = helper.make_tensor_value_info('output', TensorProto.FLOAT, [1, 1, 1024, 1024])
            node = helper.make_node('Identity', ['input'], ['output'])
            graph = helper.make_graph([node], 'test-model', [X], [Y])
            model = helper.make_model(graph)
            os.makedirs('tests/test_data/model', exist_ok=True)
            onnx.save(model, 'tests/test_data/model/test_model.onnx')
            print('Dummy ONNX model created successfully')
        except ImportError:
            # If onnx is not available, create an empty file
            os.makedirs('tests/test_data/model', exist_ok=True)
            with open('tests/test_data/model/test_model.onnx', 'wb') as f:
                f.write(b'dummy model')
            print('Created placeholder ONNX model')
        "
    
    - name: Run unit tests
      env:
        TEST_MODEL_PATH: 'tests/test_data/model/test_model.onnx'
      run: |
        pytest tests/ -v -m "not integration"
    
    - name: Run linting
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics